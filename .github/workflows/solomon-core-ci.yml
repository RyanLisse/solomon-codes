name: Solomon Core CI/CD

on:
  push:
    branches: [main, develop, 'feature/**']
    paths:
      - 'packages/@solomon/core/**'
      - '.github/workflows/solomon-core-ci.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'packages/@solomon/core/**'

jobs:
  test:
    name: Test Solomon Core
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-
      
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      - name: Run linting
        run: |
          cd packages/@solomon/core
          bun run lint || true
      
      - name: Run type checking
        run: |
          cd packages/@solomon/core
          bun run typecheck || true
      
      - name: Run unit tests
        run: |
          cd packages/@solomon/core
          bun test --coverage
      
      - name: Run performance tests
        run: |
          cd packages/@solomon/core
          bun test tests/swarm/performance.test.ts
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: matrix.node-version == '20.x'
        with:
          directory: ./packages/@solomon/core/coverage
          flags: solomon-core
          name: solomon-core-coverage
      
      - name: Build package
        run: |
          cd packages/@solomon/core
          bun run build || echo "No build script defined"

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      - name: Run integration tests
        run: |
          cd packages/@solomon/core
          bun test tests/graphs/swarm-graph.test.ts
      
      - name: Test LangGraph integration
        run: |
          cd packages/@solomon/core
          bun test --grep "LangGraph"

  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      - name: Check test coverage
        run: |
          cd packages/@solomon/core
          bun test --coverage
          # Fail if coverage is below 80%
          # Add coverage threshold check here
      
      - name: Run security audit
        run: |
          bun audit || true
      
      - name: Check for TODOs
        run: |
          echo "Checking for TODO comments..."
          grep -r "TODO\|FIXME\|HACK" packages/@solomon/core/src || true

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test, integration, quality]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      - name: Build package
        run: |
          cd packages/@solomon/core
          bun run build || echo "No build script defined"
      
      - name: Create release tag
        run: |
          VERSION=$(cat packages/@solomon/core/package.json | jq -r '.version')
          git tag -a "solomon-core-v$VERSION" -m "Release Solomon Core v$VERSION"
          git push origin "solomon-core-v$VERSION" || true
      
      - name: Publish to npm (dry run)
        run: |
          cd packages/@solomon/core
          npm publish --dry-run